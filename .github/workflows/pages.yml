name: Deploy site to GitHub Pages

on:
  push:
    branches: [ master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency: pages

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Upload build artifact for server
        uses: actions/upload-artifact@v4
        with:
          name: site
          path: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy_servers:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download site artifact
        uses: actions/download-artifact@v4
        with:
          name: site
          path: site

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          
          echo "=== Debug Info ==="
          echo "SERVER_HOSTS: ${{ secrets.SERVER_HOSTS }}"
          echo "DEPLOY_PORT: ${{ secrets.SERVER_PORT }}"
          echo "KNOWN_HOSTS configured: ${{ secrets.KNOWN_HOSTS != '' }}"
          echo "=================="
          
          if [ -n "${{ secrets.KNOWN_HOSTS }}" ]; then
            echo "Using predefined KNOWN_HOSTS"
            echo "${{ secrets.KNOWN_HOSTS }}" >> ~/.ssh/known_hosts
          else
            echo "Scanning host keys for all servers..."
            SERVER_HOSTS="${{ secrets.SERVER_HOSTS }}"
            DEPLOY_PORT="${{ secrets.SERVER_PORT || '22' }}"
            
            if [ -z "$SERVER_HOSTS" ]; then
              echo "ERROR: SERVER_HOSTS is empty!"
              exit 1
            fi
            
            IFS='|' read -ra HOSTS <<< "$SERVER_HOSTS"
            for host in "${HOSTS[@]}"; do
              if [ -n "$host" ]; then
                echo "Scanning $host:$DEPLOY_PORT..."
                ssh-keyscan -p "$DEPLOY_PORT" "$host" >> ~/.ssh/known_hosts 2>/dev/null || {
                  echo "Warning: Failed to scan $host, trying without port..."
                  ssh-keyscan "$host" >> ~/.ssh/known_hosts 2>/dev/null || {
                    echo "ERROR: Could not scan $host"
                  }
                }
              fi
            done
          fi
          
          echo "=== Known hosts file content ==="
          cat ~/.ssh/known_hosts
          echo "================================"
          echo "Known hosts configured successfully"

      - name: Install rsync
        run: sudo apt-get update && sudo apt-get install -y rsync

      - name: Deploy to multiple servers
        env:
          SERVER_HOSTS: ${{ secrets.SERVER_HOSTS }}  # 多个IP用|分割，如: "192.168.1.10|192.168.1.11|192.168.1.12"
          DEPLOY_PORT: ${{ secrets.SERVER_PORT }}
          DEPLOY_USER: ${{ secrets.SERVER_USER }}
          REMOTE_BASE_DIR: ${{ vars.SERVER_DIR }}
          BUILD_DIR: site
          KEEP_RELEASES: ${{ vars.KEEP_RELEASES || '5' }}
          REMOTE_APPEND_HOST_PATH: ${{ vars.SERVER_APPEND_HOST_PATH || 'true' }}
        run: |
          chmod +x ./scripts/deploy_server.sh
          ./scripts/deploy_server.sh
